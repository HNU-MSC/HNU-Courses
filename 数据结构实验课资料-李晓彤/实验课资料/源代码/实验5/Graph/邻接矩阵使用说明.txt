编译环境：DEV c++ 5.11
说明：这是邻接矩阵实现的图
输入说明：这里需要先输入要构造的图的顶点数，其次输入这些顶点，然后输入边数，然后输入对应的边。
功能：
1.构造图
2.输出邻接矩阵
3.进行深度遍历
4.删除边
5.判断是否是图中的边

接下来是5组测试样例仅供参考
测试样例一：（普通）
输入：
5
A B C D E
6
A B 10 
A C 20
B C 5
B E 2
E D 4
C D 3
A
A B
A B
输出：
------欢迎来到由邻接矩阵实现的图中------
请输入要构造的图的顶点数:
5
请输入这5个顶点,顶点之间用空格隔开，例如构造一个5个顶点的图，则输入A B C D E
A B C D E
请输入边数：
6
接下来请输入6条边：譬如说A B有一条权值为20的边，则输入 A B 20，顶点与顶点和权值中间用空格隔开
A B 10
A C 20
B C 5
B E 2
E D 4
C D 3
接下来输出邻接矩阵：
0 10 20 0 0
10 0 5 0 2
20 5 0 3 0
0 0 3 0 4
0 2 0 4 0
接下来进行图的遍历：
请输入起始顶点：
A
接下来是深度遍历的结果：
A B C D E 请输入想要删除的边：例如 A B
A B
删除边后的邻接矩阵为：
0 0 20 0 0
0 0 5 0 2
20 5 0 3 0
0 0 3 0 4
0 2 0 4 0
接下来判断边(i,j)是否是图中的一条边
请输入想要判断的边，例如 A B
A B
A B不是图中的一条边！

测试样例二：（特殊样例，有回溯，删除不存在的边）
输入：
6
A B C D E F
8
A E 1
A C 1
C D 1
C F 1
D F 1
C B 1
B F 1
E F 1
A
A D
A D
输出：
------欢迎来到由邻接矩阵实现的图中------
请输入要构造的图的顶点数:
6
请输入这6个顶点,顶点之间用空格隔开，例如构造一个5个顶点的图，则输入A B C D E
A B C D E F
请输入边数：
8
接下来请输入8条边：譬如说A B有一条权值为20的边，则输入 A B 20，顶点与顶点和权值中间用空格隔开
A E 1
A C 1
C D 1
C F 1
D F 1
C B 1
B F 1
E F 1
接下来输出邻接矩阵：
0 0 1 0 1 0
0 0 1 0 0 1
1 1 0 1 0 1
0 0 1 0 0 1
1 0 0 0 0 1
0 1 1 1 1 0
接下来进行图的遍历：
请输入起始顶点：
A
接下来是深度遍历的结果：
A C B F D E 请输入想要删除的边：例如 A B
A D
该边不存在，删除失败！
删除边后的邻接矩阵为：
0 0 1 0 1 0
0 0 1 0 0 1
1 1 0 1 0 1
0 0 1 0 0 1
1 0 0 0 0 1
0 1 1 1 1 0
接下来判断边(i,j)是否是图中的一条边
请输入想要判断的边，例如 A B
A D
A D不是图中的一条边！

测试样例三：（特殊，有回溯）
输入：
3
A B C
2
A B 1
A C 2
A
A B
B A
输出：
------欢迎来到由邻接矩阵实现的图中------
请输入要构造的图的顶点数:
3
请输入这3个顶点,顶点之间用空格隔开，例如构造一个5个顶点的图，则输入A B C D E
A B C
请输入边数：
2
接下来请输入2条边：譬如说A B有一条权值为20的边，则输入 A B 20，顶点与顶点和权值中间用空格隔开
A B 1
A C 2
接下来输出邻接矩阵：
0 1 2
1 0 0
2 0 0
接下来进行图的遍历：
请输入起始顶点：
A
接下来是深度遍历的结果：
A B C 请输入想要删除的边：例如 A B
A B
删除边后的邻接矩阵为：
0 0 2
0 0 0
2 0 0
接下来判断边(i,j)是否是图中的一条边
请输入想要判断的边，例如 A B
B A
B A不是图中的一条边！

测试样例四：（起点不是A）
输入：
6
A B C D E F
8
A E 1
A C 1
C D 1
C F 1
D F 1
C B 1
B F 1
E F 1
E
A C
C D
输出：
------欢迎来到由邻接矩阵实现的图中------
请输入要构造的图的顶点数:
6
请输入这6个顶点,顶点之间用空格隔开，例如构造一个5个顶点的图，则输入A B C D E
A B C D E F
请输入边数：
8
接下来请输入8条边：譬如说A B有一条权值为20的边，则输入 A B 20，顶点与顶点和权值中间用空格隔开
A E 1
A C 1
C D 1
C F 1
D F 1
C B 1
B F 1
E F 1
接下来输出邻接矩阵：
0 0 1 0 1 0
0 0 1 0 0 1
1 1 0 1 0 1
0 0 1 0 0 1
1 0 0 0 0 1
0 1 1 1 1 0
接下来进行图的遍历：
请输入起始顶点：
E
接下来是深度遍历的结果：
E A C B F D 请输入想要删除的边：例如 A B
A C
删除边后的邻接矩阵为：
0 0 0 0 1 0
0 0 1 0 0 1
0 1 0 1 0 1
0 0 1 0 0 1
1 0 0 0 0 1
0 1 1 1 1 0
接下来判断边(i,j)是否是图中的一条边
请输入想要判断的边，例如 A B
C D
C D是图中的一条边！

测试样例五（起点不是A）
输入：
6
A B C D E F
8
A E 1
A C 1
C D 1
C F 1
D F 1
C B 1
B F 1
E F 1
D
E A
F B
输出：
------欢迎来到由邻接矩阵实现的图中------
请输入要构造的图的顶点数:
6
请输入这6个顶点,顶点之间用空格隔开，例如构造一个5个顶点的图，则输入A B C D E
A B C D E F
请输入边数：
8
接下来请输入8条边：譬如说A B有一条权值为20的边，则输入 A B 20，顶点与顶点和权值中间用空格隔开
A E 1
A C 1
C D 1
C F 1
D F 1
C B 1
B F 1
E F 1
接下来输出邻接矩阵：
0 0 1 0 1 0
0 0 1 0 0 1
1 1 0 1 0 1
0 0 1 0 0 1
1 0 0 0 0 1
0 1 1 1 1 0
接下来进行图的遍历：
请输入起始顶点：
D
接下来是深度遍历的结果：
D C A E F B 请输入想要删除的边：例如 A B
E A
删除边后的邻接矩阵为：
0 0 1 0 0 0
0 0 1 0 0 1
1 1 0 1 0 1
0 0 1 0 0 1
0 0 0 0 0 1
0 1 1 1 1 0
接下来判断边(i,j)是否是图中的一条边
请输入想要判断的边，例如 A B
F B
F B是图中的一条边！



